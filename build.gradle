// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.1.3'
    }
}

apply plugin: 'com.android.application'

dependencies {
    compile project(':external-libs/MemorizingTrustManager')
    compile project(':external-libs/ActionBarSherlock')
    compile fileTree(include: '*.jar', dir: 'libs')
    compile 'com.android.support:support-v4:19.1.0'
}


android {

    signingConfigs {
        config {
        }
    }

    afterEvaluate { project ->
        def propsFile = rootProject.file('keystore.properties')
        def props = new Properties()
        props.load(new FileInputStream(propsFile))
        android.signingConfigs['config'].storeFile = file(props['storeFile'])
        android.signingConfigs['config'].storePassword = props['storePassword']
    }

    compileSdkVersion 22
    buildToolsVersion '23.0.1'
    defaultConfig {
        minSdkVersion 9
        targetSdkVersion 19
    }
    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
        }

        // Move the build types to build-types/<type>
        // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
        // This moves them out of them default location under src/<type>/... which would
        // conflict with src/ being used by the main source set.
        // Adding new build types or product flavors should be accompanied
        // by a similar customization.
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }
    buildTypes {
        release {
        }
    }
    productFlavors {
    }
}